{"version":3,"sources":["components/List.js","components/ShowOstoskori.js","components/Ostoskori.js","App.js","serviceWorker.js","index.js"],"names":["List","LisaaKoriin","useState","product","Ostoskoriin","id","push","items","tuote","hinta","url","tuotteet","map","key","target","href","className","src","onClick","width","kuvaus","toLocaleString","ShowShoppingList","ostoskori","JatkaOstoksia","TyhjennaKori","summa","lisaaSumma","useEffect","LaskeSumma","i","height","fontSize","name","Poisto","splice","length","matikka","Button","variant","color","ShoppingList","lisaaOstoskori","maara","lisaaMaara","tila","setTila","a","setA","concat","ShowOstoskori","App","kauppaan","setKauppaan","Ostoskori","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.176b31d0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport items from './items.json';\r\n\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nfunction List({LisaaKoriin}) {\r\n\r\n  const [product, setProduct] = useState([]);\r\n  \r\n\r\n\r\n  const Ostoskoriin = (id) => {\r\n\r\n    \r\n    product.push({id:items[id].id,tuote:items[id].tuote,hinta:items[id].hinta,url:items[id].url})\r\n    LisaaKoriin(product);\r\n    \r\n\r\n\r\n    //setService({ ...service, [event.target.name]: event.target.value });\r\n    //setProduct([items[id].id,items[id].text,items[id].value])\r\n    //console.log(product)\r\n    \r\n  }\r\n\r\nconst tuotteet = items.map((items)=>{\r\n\r\n  return (\r\n    \r\n      <tr key = {items.id} >\r\n        <td><a target=\"_blank\" href={items.url}><img className=\"Kuva\" src={items.url} /></a></td>\r\n        <td className=\"lisaa1\" onClick={()=>Ostoskoriin(items.id)}>{items.tuote}</td>\r\n        <td className=\"kuvaus\" onClick={()=>Ostoskoriin(items.id)} width={300}>{items.kuvaus}</td>\r\n        <td className=\"lisaa1\" onClick={()=>Ostoskoriin(items.id)}>{items.hinta.toLocaleString()}€</td>\r\n        <td> <AddCircleIcon className=\"lisaa2\" onClick={()=>Ostoskoriin(items.id)}/></td>\r\n      </tr>\r\n    \r\n  )\r\n}\r\n)\r\n\r\n\r\n  return (\r\n    <div>\r\n    <h5>Hoikan maansiirto verkkokauppa</h5>\r\n    <table className=\"Taulukko\">\r\n      <th></th>\r\n      <th>Tuote</th>\r\n      <th>Kuvaus</th>\r\n      <th>Hinta</th>\r\n      {tuotteet}\r\n    </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from 'react';\r\nimport items from './items.json';\r\nimport Button from '@material-ui/core/Button';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\n\r\n\r\nfunction ShowShoppingList ({ostoskori, JatkaOstoksia, TyhjennaKori}) {\r\n\r\n    const [summa, lisaaSumma] = useState(0);\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n         LaskeSumma();\r\n    }, [])\r\n\r\n\r\n    const tuotteet = ostoskori.map((items,i)=>{\r\n\r\n        return (\r\n          \r\n            <tr key = {i} >\r\n              <td><a target=\"_blank\" href={items.url}><img src={items.url} width={300} height={200}/></a></td>\r\n              <td className=\"ShowOstoskori\">{items.tuote}</td>\r\n              <td className=\"ShowOstoskori\"> </td>\r\n              <td className=\"ShowOstoskori\">{items.hinta.toLocaleString()}</td>\r\n              <td><RemoveCircleIcon fontSize=\"small\" name={i} onClick={()=>Poisto(i)}/></td>\r\n            </tr>\r\n        )\r\n      }\r\n      )\r\n\r\n      const Poisto = (i) =>{\r\n        ostoskori.splice(i, 1);\r\n        LaskeSumma();\r\n        if(ostoskori.length===0) {\r\n        TyhjennaKori();\r\n        }\r\n      }\r\n\r\n\r\n    const Jatka = () =>{\r\n        \r\n        JatkaOstoksia(ostoskori);\r\n        \r\n    }\r\n\r\n    const Tyhjenna = () =>{\r\n        lisaaSumma(0);\r\n        TyhjennaKori(0);\r\n    }\r\n\r\n    const LaskeSumma = () =>{\r\n        let matikka=0;\r\n        for (let i = 0; i < ostoskori.length; i++) {\r\n            \r\n             matikka=matikka + ostoskori[i].hinta;  \r\n            }\r\n           \r\n        lisaaSumma(matikka.toLocaleString())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Ostoskorisi sisältö:</h3>\r\n            <table className=\"Taulukko\">\r\n                {tuotteet}\r\n            </table>\r\n            <br></br>\r\n            <div className=\"ShowOstoskori\">Tilauksen kokonaisarvo: {summa} €</div><br></br>\r\n            <Button  variant=\"outlined\" color=\"primary\" onClick={Jatka}>Jatka ostoksia</Button><br></br><br></br>\r\n            <Button  variant=\"outlined\" color=\"primary\" onClick={Tyhjenna}>Tyhjennä ostoskori</Button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ShowShoppingList;","import React, { useEffect, useState } from 'react';\r\nimport items from './items.json';\r\nimport List from './List';\r\nimport ShowOstoskori from './ShowOstoskori';\r\n\r\n\r\n\r\nfunction ShoppingList () {\r\n\r\n    const [ostoskori, lisaaOstoskori] = useState(0);\r\n    const [maara, lisaaMaara] = useState(0)\r\n    const [tila, setTila] = useState(0);\r\n    const [a, setA] = useState([]);\r\n    \r\n\r\n    const LisaaKoriin = (product) =>{\r\n        \r\n        lisaaMaara(maara + 1)\r\n        lisaaOstoskori(product)\r\n       \r\n}\r\n\r\n    const JatkaOstoksia = (tuotteet) => {\r\n        lisaaOstoskori(0)\r\n        lisaaMaara(tuotteet.length)\r\n        setTila(0);\r\n    }\r\n\r\n    const NaytaOstoskori = () => {\r\n        if (ostoskori!==0) {\r\n        setA(a.concat(ostoskori))\r\n        }\r\n       setTila(1);\r\n    }\r\n\r\n    const TyhjennaKori = (i) => {\r\n        lisaaMaara(i)\r\n        lisaaOstoskori(0);\r\n        setA([]);\r\n    }\r\n\r\n    \r\n    if (tila===0) {\r\n    return (\r\n    <div>\r\n        <div className=\"Ostoskori\" >\r\n            Ostoskori: {maara} tuotetta\r\n            <div><br></br> </div>\r\n            <div className=\"Ostoskori2\" onClick={NaytaOstoskori}>NÄYTÄ OSTOSKORI</div>\r\n        </div >\r\n        <List LisaaKoriin={LisaaKoriin}/>\r\n    </div>\r\n    )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <ShowOstoskori ostoskori={a} JatkaOstoksia={JatkaOstoksia} TyhjennaKori={TyhjennaKori}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ShoppingList;","import React, { useState } from 'react';\nimport './App.css';\nimport Ostoskori from './components/Ostoskori';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n\n  const [kauppaan, setKauppaan] = useState(0)\n \nconst Kauppaan = () => {\n  setKauppaan(1);\n}\n\n\nif (kauppaan===0){\n  return (\n    <div className=\"Kauppaan\">\n      Astu sisään Hoikan Maansiirto Oyn verkkokauppaan. <br></br>\n    <Button variant=\"outlined\" color=\"primary\" onClick={Kauppaan}>Kauppaan</Button>\n    </div>\n  );\n} else {\n  return(\n    <div className=\"App\">\n      <Ostoskori />\n      \n    </div>\n  )\n}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}