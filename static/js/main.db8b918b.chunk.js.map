{"version":3,"sources":["components/List.js","components/ShowOstoskori.js","components/Ostoskori.js","App.js","serviceWorker.js","index.js"],"names":["List","LisaaKoriin","useState","product","nayta","setNayta","lista","Ostoskoriin","id","console","log","push","items","tuote","hinta","url","i","length","kategoria","tuotteet","map","key","target","href","className","src","onClick","width","kuvaus","toLocaleString","ShowShoppingList","ostoskori","JatkaOstoksia","TyhjennaKori","summa","lisaaSumma","useEffect","LaskeSumma","fontSize","name","Poisto","splice","matikka","Button","variant","color","ShoppingList","lisaaOstoskori","maara","lisaaMaara","tila","setTila","a","setA","concat","ShowOstoskori","App","kauppaan","setKauppaan","Ostoskori","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.db8b918b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport items from './items.json';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\nfunction List({ LisaaKoriin }) {\r\n\r\n  const [product, setProduct] = useState([]);\r\n  const [nayta, setNayta] = useState('Kaikki');\r\n  let lista = [];\r\n\r\n  const Ostoskoriin = (id) => {\r\n    console.log(id)\r\n    product.push({ id: items[id].id, tuote: items[id].tuote, hinta: items[id].hinta, url: items[id].url })\r\n    LisaaKoriin(product);\r\n  }\r\n\r\n  if (nayta === 'Kaikki') {\r\n    lista = items;\r\n  }\r\n\r\n  if (nayta !== 'Kaikki') {\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].kategoria === nayta) {\r\n        lista.push(items[i])\r\n      }\r\n    } \r\n  }\r\n\r\n\r\n  const tuotteet = lista.map((lista) => {\r\n\r\n    return (\r\n\r\n      <tr key={lista.id} >\r\n        <td><a target=\"_blank\" href={lista.url}><img className=\"Kuva\" src={lista.url} /></a></td>\r\n        <td className=\"lisaa1\" onClick={() => Ostoskoriin(lista.id)}>{lista.tuote}</td>\r\n        <td className=\"kuvaus\" onClick={() => Ostoskoriin(lista.id)} width={300}>{lista.kuvaus}</td>\r\n        <td className=\"lisaa1\" onClick={() => Ostoskoriin(lista.id)}>{lista.hinta.toLocaleString()}€</td>\r\n        <td> <AddCircleIcon className=\"lisaa2\" onClick={() => Ostoskoriin(lista.id)} /></td>\r\n      </tr>\r\n\r\n    )\r\n  }\r\n  )\r\n\r\n  const Traktori = () => {\r\n    setNayta('Traktori')\r\n  }\r\n\r\n  const Kaivuri = () => {\r\n    setNayta('Kaivuri')\r\n  }\r\n\r\n  const Rekka = () => {\r\n    setNayta('Rekka')\r\n  }\r\n\r\n  const Kaikki = () => {\r\n    setNayta('Kaikki')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1> </h1>\r\n      <table className=\"Taulukko2\">\r\n        <th onClick={Kaikki}>Kaikki laitteet</th>\r\n        <th onClick={Traktori}>Traktorit</th>\r\n        <th onClick={Kaivuri}>Maansiirtokaivurit</th>\r\n        <th onClick={Rekka}>Rekat</th>\r\n      </table>\r\n      <table className=\"Taulukko\">\r\n        <th></th>\r\n        <th>Tuote</th>\r\n        <th>Kuvaus</th>\r\n        <th>Hinta</th>\r\n        {tuotteet}\r\n      </table>\r\n\r\n      <h1> </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from 'react';\r\nimport items from './items.json';\r\nimport Button from '@material-ui/core/Button';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\n\r\n\r\nfunction ShowShoppingList ({ostoskori, JatkaOstoksia, TyhjennaKori}) {\r\n\r\n    const [summa, lisaaSumma] = useState(0);\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n         LaskeSumma();\r\n    }, [])\r\n\r\n\r\n    const tuotteet = ostoskori.map((items,i)=>{\r\n\r\n        return (\r\n          \r\n            <tr key = {i} >\r\n              <td><a target=\"_blank\" href={items.url}><img className=\"Kuva\" src={items.url}/></a></td>\r\n              <td className=\"ShowOstoskori\">{items.tuote}</td>\r\n              <td className=\"ShowOstoskori\"> </td>\r\n              <td className=\"ShowOstoskori\">{items.hinta.toLocaleString()}</td>\r\n              <td><RemoveCircleIcon fontSize=\"small\" name={i} onClick={()=>Poisto(i)}/></td>\r\n            </tr>\r\n        )\r\n      }\r\n      )\r\n\r\n      const Poisto = (i) =>{\r\n        ostoskori.splice(i, 1);\r\n        LaskeSumma();\r\n        if(ostoskori.length===0) {\r\n        TyhjennaKori();\r\n        }\r\n      }\r\n\r\n\r\n    const Jatka = () =>{\r\n        \r\n        JatkaOstoksia(ostoskori);\r\n        \r\n    }\r\n\r\n    const Tyhjenna = () =>{\r\n        lisaaSumma(0);\r\n        TyhjennaKori(0);\r\n    }\r\n\r\n    const LaskeSumma = () =>{\r\n        let matikka=0;\r\n        for (let i = 0; i < ostoskori.length; i++) {\r\n            \r\n             matikka=matikka + ostoskori[i].hinta;  \r\n            }\r\n           \r\n        lisaaSumma(matikka.toLocaleString())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Ostoskorisi sisältö:</h3>\r\n            <table className=\"Taulukko\">\r\n                {tuotteet}\r\n            </table>\r\n            <br></br>\r\n            <div className=\"ShowOstoskori\">Tilauksen kokonaisarvo: {summa} €</div><br></br>\r\n            <Button  variant=\"outlined\" color=\"primary\" onClick={Jatka}>Jatka ostoksia</Button><br></br><br></br>\r\n            <Button  variant=\"outlined\" color=\"primary\" onClick={Tyhjenna}>Tyhjennä ostoskori</Button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ShowShoppingList;","import React, { useState } from 'react';\r\nimport List from './List';\r\nimport ShowOstoskori from './ShowOstoskori';\r\n\r\n\r\n\r\n\r\nfunction ShoppingList () {\r\n\r\n    const [ostoskori, lisaaOstoskori] = useState(0);\r\n    const [maara, lisaaMaara] = useState(0)\r\n    const [tila, setTila] = useState(0);\r\n    const [a, setA] = useState([]);\r\n    \r\n    \r\n\r\n    const LisaaKoriin = (product) =>{\r\n        \r\n        lisaaMaara(maara + 1)\r\n        lisaaOstoskori(product)\r\n       \r\n}\r\n\r\n    const JatkaOstoksia = (tuotteet) => {\r\n        lisaaOstoskori(0)\r\n        lisaaMaara(tuotteet.length)\r\n        setTila(0);\r\n    }\r\n\r\n    const NaytaOstoskori = () => {\r\n        if (ostoskori!==0) {\r\n        setA(a.concat(ostoskori))\r\n        }\r\n       setTila(1);\r\n    }\r\n\r\n    const TyhjennaKori = (i) => {\r\n        lisaaMaara(i)\r\n        lisaaOstoskori(0);\r\n        setA([]);\r\n    }\r\n\r\n    \r\n    if (tila===0) {\r\n    return (\r\n    <div>\r\n        <div className=\"Ostoskori\" >\r\n            Ostoskori: {maara} tuotetta\r\n            <div><br></br> </div>\r\n            <div className=\"Ostoskori2\" onClick={NaytaOstoskori}>NÄYTÄ OSTOSKORI</div>\r\n        </div >\r\n        <List LisaaKoriin={LisaaKoriin}/>\r\n    </div>\r\n    )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <ShowOstoskori ostoskori={a} JatkaOstoksia={JatkaOstoksia} TyhjennaKori={TyhjennaKori}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ShoppingList;","import React, { useState } from 'react';\nimport './App.css';\nimport Ostoskori from './components/Ostoskori';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n\n  const [kauppaan, setKauppaan] = useState(0)\n  \n \nconst Kauppaan = () => {\n  setKauppaan(1);\n}\n\n\nif (kauppaan===0){\n  return (\n    <div className=\"Kauppaan\">\n      Tervetuloa Hoikan Maansiirto Oyn verkkokauppaan. <br></br>\n    <Button variant=\"outlined\" color=\"primary\" onClick={Kauppaan}>Kauppaan</Button>\n    </div>\n  );\n} else {\n  return(\n    <div className=\"App\">\n      <Ostoskori />\n      \n    </div>\n  )\n}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}